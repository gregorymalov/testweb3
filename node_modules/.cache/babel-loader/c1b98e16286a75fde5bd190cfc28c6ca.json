{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _ethers = require(\"ethers\");\n\nvar UnitConverter = /*#__PURE__*/function () {\n  function UnitConverter() {\n    (0, _classCallCheck2.default)(this, UnitConverter);\n  }\n\n  (0, _createClass2.default)(UnitConverter, null, [{\n    key: \"ETH\",\n    value: function value(_value) {\n      return _ethers.ethers.utils.parseEther(\"\".concat(_value)).toString();\n    }\n  }, {\n    key: \"Token\",\n    value: function value(_value2) {\n      var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 18;\n      return _ethers.ethers.utils.parseUnits(\"\".concat(_value2), +decimals).toString();\n    }\n  }, {\n    key: \"FromWei\",\n    value: function value(_value3) {\n      var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 18;\n\n      var result = _ethers.ethers.utils.formatUnits(_value3, decimals); // formatUnits will always add a trailing 0, remove this as we want to return \"1\" instead of \"1.0\"\n\n\n      var splitResult = result.split('.');\n\n      if (splitResult[1] === '0') {\n        return splitResult[0];\n      }\n\n      return result;\n    }\n  }]);\n  return UnitConverter;\n}();\n\nmodule.exports = UnitConverter;","map":null,"metadata":{},"sourceType":"script"}