{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\n\nvar _filter = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\"));\n\nvar _from = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/from\"));\n\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _ParseUser = _interopRequireDefault(require(\"./ParseUser\"));\n\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nvar _ParseACL = _interopRequireDefault(require(\"./ParseACL\"));\n\nvar _createSigningData = _interopRequireDefault(require(\"./createSigningData\"));\n/* global window */\n\n\nvar web3EnablePromise = null;\n\nvar MoralisDot = /*#__PURE__*/function () {\n  function MoralisDot() {\n    (0, _classCallCheck2.default)(this, MoralisDot);\n  }\n\n  (0, _createClass2.default)(MoralisDot, null, [{\n    key: \"web3IsInjected\",\n    value: function value() {\n      return (0, _keys.default)(window.injectedWeb3).length !== 0;\n    }\n  }, {\n    key: \"enable\",\n    value: function () {\n      var _enable = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(opts) {\n        var _window$injectedWeb, _window$injectedWeb$t;\n\n        var type,\n            _args = arguments;\n        return _regenerator.default.wrap(function (_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                type = _args.length > 1 && _args[1] !== undefined ? _args[1] : 'polkadot-js';\n\n                if (!web3EnablePromise) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", web3EnablePromise);\n\n              case 3:\n                web3EnablePromise = (_window$injectedWeb = window.injectedWeb3) === null || _window$injectedWeb === void 0 ? void 0 : (_window$injectedWeb$t = _window$injectedWeb[type]) === null || _window$injectedWeb$t === void 0 ? void 0 : _window$injectedWeb$t.enable(opts);\n                return _context.abrupt(\"return\", web3EnablePromise);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function () {\n        return _enable.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"authenticate\",\n    value: function () {\n      var _authenticate = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(opts) {\n        var _opts$name;\n\n        var allAccounts, account, address, dotAddress, accounts, message, data, signature, authData, user;\n        return _regenerator.default.wrap(function (_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return MoralisDot.enable((_opts$name = opts === null || opts === void 0 ? void 0 : opts.name) !== null && _opts$name !== void 0 ? _opts$name : 'Moralis');\n\n              case 2:\n                MoralisDot.web3 = _context2.sent;\n                _context2.next = 5;\n                return MoralisDot.web3.accounts.get();\n\n              case 5:\n                allAccounts = _context2.sent;\n                account = allAccounts[0];\n                address = account === null || account === void 0 ? void 0 : account.address;\n\n                if (address) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                throw new Error('Address not found');\n\n              case 10:\n                dotAddress = address;\n                accounts = [dotAddress];\n                message = MoralisDot.getSigningData();\n                _context2.next = 15;\n                return (0, _createSigningData.default)(message);\n\n              case 15:\n                data = _context2.sent;\n                _context2.next = 18;\n                return MoralisDot.sign(address, data);\n\n              case 18:\n                signature = _context2.sent;\n                authData = {\n                  id: dotAddress,\n                  signature: signature,\n                  data: data\n                };\n                _context2.next = 22;\n                return _ParseUser.default.logInWith('moralisDot', {\n                  authData: authData\n                });\n\n              case 22:\n                user = _context2.sent;\n\n                if (user) {\n                  _context2.next = 25;\n                  break;\n                }\n\n                throw new Error('Could not get user');\n\n              case 25:\n                _context2.next = 27;\n                return user.setACL(new _ParseACL.default(user));\n\n              case 27:\n                user.addAllUnique('dotAccounts', accounts);\n                user.set('dotAddress', dotAddress);\n                _context2.next = 31;\n                return user.save();\n\n              case 31:\n                return _context2.abrupt(\"return\", user);\n\n              case 32:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function () {\n        return _authenticate.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"link\",\n    value: function () {\n      var _link = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(account, options) {\n        var message, user, dotAddress, DotAddress, query, dotAddressRecord, data, signature, authData;\n        return _regenerator.default.wrap(function (_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                message = (options === null || options === void 0 ? void 0 : options.signingMessage) || MoralisDot.getSigningData();\n                _context3.next = 3;\n                return _ParseUser.default.current();\n\n              case 3:\n                user = _context3.sent;\n                dotAddress = account;\n                DotAddress = _ParseObject.default.extend('_DotAddress');\n                query = new _ParseQuery.default(DotAddress);\n                _context3.next = 9;\n                return query.get(dotAddress).catch(function () {\n                  return null;\n                });\n\n              case 9:\n                dotAddressRecord = _context3.sent;\n\n                if (dotAddressRecord) {\n                  _context3.next = 20;\n                  break;\n                }\n\n                _context3.next = 13;\n                return (0, _createSigningData.default)(message);\n\n              case 13:\n                data = _context3.sent;\n                _context3.next = 16;\n                return MoralisDot.sign(dotAddress, data);\n\n              case 16:\n                signature = _context3.sent;\n                authData = {\n                  id: dotAddress,\n                  signature: signature,\n                  data: data\n                };\n                _context3.next = 20;\n                return user.linkWith('moralisDot', {\n                  authData: authData\n                });\n\n              case 20:\n                user.addAllUnique('dotAccounts', [dotAddress]);\n                user.set('dotAddress', dotAddress);\n                _context3.next = 24;\n                return user.save();\n\n              case 24:\n                return _context3.abrupt(\"return\", user);\n\n              case 25:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function () {\n        return _link.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"unlink\",\n    value: function () {\n      var _unlink = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(account) {\n        var _user$get;\n\n        var accountsLower, DotAddress, query, dotAddressRecord, user, accounts, nextAccounts;\n        return _regenerator.default.wrap(function (_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                accountsLower = account;\n                DotAddress = _ParseObject.default.extend('_DotAddress');\n                query = new _ParseQuery.default(DotAddress);\n                _context4.next = 5;\n                return query.get(accountsLower);\n\n              case 5:\n                dotAddressRecord = _context4.sent;\n                _context4.next = 8;\n                return dotAddressRecord.destroy();\n\n              case 8:\n                _context4.next = 10;\n                return _ParseUser.default.current();\n\n              case 10:\n                user = _context4.sent;\n                accounts = (_user$get = user.get('dotAccounts')) !== null && _user$get !== void 0 ? _user$get : [];\n                nextAccounts = (0, _filter.default)(accounts).call(accounts, function (v) {\n                  return v !== accountsLower;\n                });\n                user.set('dotAccounts', nextAccounts);\n                user.set('dotAddress', nextAccounts[0]);\n                _context4.next = 17;\n                return user._unlinkFrom('moralisDot');\n\n              case 17:\n                _context4.next = 19;\n                return user.save();\n\n              case 19:\n                return _context4.abrupt(\"return\", user);\n\n              case 20:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function () {\n        return _unlink.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"sign\",\n    value: function () {\n      var _sign = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5(address, data) {\n        var web3, _yield$web3$signer$si, signature;\n\n        return _regenerator.default.wrap(function (_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (web3EnablePromise) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                throw new Error('Must enable MoralisDot');\n\n              case 2:\n                _context5.next = 4;\n                return web3EnablePromise;\n\n              case 4:\n                web3 = _context5.sent;\n\n                if (web3.signer) {\n                  _context5.next = 7;\n                  break;\n                }\n\n                throw new Error('No signer found');\n\n              case 7:\n                _context5.next = 9;\n                return web3.signer.signRaw({\n                  address: address,\n                  data: stringToHex(data),\n                  type: 'bytes'\n                });\n\n              case 9:\n                _yield$web3$signer$si = _context5.sent;\n                signature = _yield$web3$signer$si.signature;\n                return _context5.abrupt(\"return\", signature);\n\n              case 12:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function () {\n        return _sign.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getSigningData\",\n    value: function value() {\n      return 'Moralis Authentication';\n    }\n  }]);\n  return MoralisDot;\n}();\n\nvar _default = MoralisDot;\nexports.default = _default;\n\nfunction stringToHex(value) {\n  return toHexString(stringToU8a(value));\n}\n\nfunction stringToU8a(value) {\n  var u8a = new Uint8Array(value.length);\n\n  for (var i = 0; i < value.length; i++) {\n    u8a[i] = value.charCodeAt(i);\n  }\n\n  return u8a;\n}\n\nfunction toHexString(byteArray) {\n  return \"0x\".concat((0, _from.default)(byteArray, function (byte) {\n    var _context6; // eslint-disable-next-line no-bitwise\n\n\n    return (0, _slice.default)(_context6 = \"0\".concat((byte & 0xff).toString(16))).call(_context6, -2);\n  }).join(''));\n}","map":null,"metadata":{},"sourceType":"script"}