{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs3/core-js-stable/reflect/construct\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = exports.InternalWeb3Events = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/getPrototypeOf\"));\n\nvar _freeze = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/freeze\"));\n\nvar _bind = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/bind\"));\n\nvar _events = _interopRequireDefault(require(\"events\"));\n\nvar _events2 = require(\"./Web3Connector/events\");\n\nvar _ethers = require(\"ethers\");\n\nvar _convert = require(\"./utils/convert\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n} // Events emitted by Moralis\n\n\nvar InternalWeb3Events = (0, _freeze.default)({\n  ACCOUNT_CHANGED: 'accountChanged',\n  CHAIN_CHANGED: 'chainChanged',\n  PROVIDER_CONNECT: 'provider-connect',\n  PROVIDER_DISCONNECT: 'provider-disconnect',\n  WEB3_ENABLED: 'web3Enabled',\n  WEB3_DEACTIVATED: 'web3Deactivated'\n});\n/**\n * Wrapper for the internal web3 provider,\n * responsible for syncing data when connector connects/deactivates\n * Gives access to ethers functionalities, initialized by the connector\n */\n\nexports.InternalWeb3Events = InternalWeb3Events;\n\nvar InternalWeb3Provider = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2.default)(InternalWeb3Provider, _EventEmitter);\n\n  var _super = _createSuper(InternalWeb3Provider);\n\n  function InternalWeb3Provider(connector) {\n    var _context, _context2, _context3, _context4;\n\n    var _this;\n\n    var anyNetwork = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var privateKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    (0, _classCallCheck2.default)(this, InternalWeb3Provider);\n    _this = _super.call(this);\n\n    if (!connector) {\n      throw new Error('Cannot initialize InternalWeb3Provider without a connector');\n    }\n\n    _this.connector = connector;\n    _this.anyNetwork = anyNetwork;\n    _this.privateKey = privateKey;\n    _this.handleAccountChanged = (0, _bind.default)(_context = _this.handleAccountChanged).call(_context, (0, _assertThisInitialized2.default)(_this));\n    _this.handleChainChanged = (0, _bind.default)(_context2 = _this.handleChainChanged).call(_context2, (0, _assertThisInitialized2.default)(_this));\n    _this.handleConnect = (0, _bind.default)(_context3 = _this.handleConnect).call(_context3, (0, _assertThisInitialized2.default)(_this));\n    _this.handleDisconnect = (0, _bind.default)(_context4 = _this.handleDisconnect).call(_context4, (0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(InternalWeb3Provider, [{\n    key: \"activate\",\n    value: function () {\n      var _activate = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(options) {\n        var _yield$this$connector, provider, chainId, account, network;\n\n        return _regenerator.default.wrap(function (_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (this.connector) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                throw new Error('Cannot activate InternalWeb3Provider without a connector');\n\n              case 2:\n                if (this.connector.on) {\n                  this.connector.on(_events2.ConnectorEvents.ACCOUNT_CHANGED, this.handleAccountChanged);\n                  this.connector.on(_events2.ConnectorEvents.CHAIN_CHANGED, this.handleChainChanged);\n                  this.connector.on(_events2.ConnectorEvents.CONNECT, this.handleConnect);\n                  this.connector.on(_events2.ConnectorEvents.DISCONNECT, this.handleDisconnect);\n                }\n\n                _context5.next = 5;\n                return this.connector.activate(options);\n\n              case 5:\n                _yield$this$connector = _context5.sent;\n                provider = _yield$this$connector.provider;\n                chainId = _yield$this$connector.chainId;\n                account = _yield$this$connector.account;\n                this.provider = provider;\n                this.chainId = chainId;\n                this.account = account;\n                network = this.anyNetwork ? 'any' : (0, _convert.fromHexToDecimal)(chainId);\n                this.web3 = new _ethers.ethers.providers.Web3Provider(provider, network);\n                return _context5.abrupt(\"return\", {\n                  provider: provider,\n                  chainId: chainId,\n                  account: account,\n                  web3: this.web3\n                });\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function () {\n        return _activate.apply(this, arguments);\n      };\n    }() // Returns a provider (or wallet if a privateKey is provided) that can sign messages (throws if not possible, ie. the account cannot sign)\n\n  }, {\n    key: \"signer\",\n    get: function get() {\n      return this.privateKey != null ? new _ethers.ethers.Wallet(this.privateKey, this.web3) : this.web3.getSigner(this.account);\n    } // Returns a provider (or wallet if a privateKey is provided) that can sign messages or the normal web3 provider as fallback\n\n  }, {\n    key: \"signerOrProvider\",\n    get: function get() {\n      try {\n        if (this.account) {\n          return this.privateKey != null ? new _ethers.ethers.Wallet(this.privateKey, this.web3) : this.web3.getSigner(this.account);\n        }\n\n        return this.web3;\n      } catch (error) {\n        return this.web3;\n      }\n    }\n  }, {\n    key: \"handleChainChanged\",\n    value: function value(chainId) {\n      this.chainId = chainId;\n      this.web3 = new _ethers.ethers.providers.Web3Provider(this.provider, (0, _convert.fromHexToDecimal)(chainId));\n      this.emit(InternalWeb3Events.CHAIN_CHANGED, chainId);\n    }\n  }, {\n    key: \"handleAccountChanged\",\n    value: function value(account) {\n      this.account = account;\n      this.emit(InternalWeb3Events.ACCOUNT_CHANGED, account);\n    } // Handle Connect events fired from connectors\n\n  }, {\n    key: \"handleConnect\",\n    value: function value(connectInfo) {\n      this.emit(InternalWeb3Events.PROVIDER_CONNECT, connectInfo);\n    } // Handle Disconnect events fired from connectors\n\n  }, {\n    key: \"handleDisconnect\",\n    value: function value(error) {\n      this.emit(InternalWeb3Events.PROVIDER_DISCONNECT, error);\n    }\n  }, {\n    key: \"deactivate\",\n    value: function () {\n      var _deactivate = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {\n        return _regenerator.default.wrap(function (_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.account = null;\n                this.chianId = null;\n                this.web3 = null;\n                this.provider = null;\n                this.privateKey = null;\n\n                if (!this.connector) {\n                  _context6.next = 10;\n                  break;\n                }\n\n                if (this.connector.removeListener) {\n                  this.connector.removeListener(InternalWeb3Events.CHAIN_CHANGED, this.handleChainChanged);\n                  this.connector.removeListener(InternalWeb3Events.ACCOUNT_CHANGED, this.handleAccountChanged);\n                  this.connector.removeListener(InternalWeb3Events.PROVIDER_CONNECT, this.handleConnect);\n                  this.connector.removeListener(InternalWeb3Events.PROVIDER_DISCONNECT, this.handleDisconnect);\n                }\n\n                if (!this.connector.deactivate) {\n                  _context6.next = 10;\n                  break;\n                }\n\n                _context6.next = 10;\n                return this.connector.deactivate();\n\n              case 10:\n                this.connector = null;\n\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function () {\n        return _deactivate.apply(this, arguments);\n      };\n    }()\n  }]);\n  return InternalWeb3Provider;\n}(_events.default);\n\nvar _default = InternalWeb3Provider;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}