{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\n\nvar _concat = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"));\n\nvar _filter = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\"));\n\nvar _reduce = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/reduce\"));\n\nvar _padStart = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/pad-start\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/toConsumableArray\"));\n\nvar _createSigningData = _interopRequireDefault(require(\"./createSigningData\"));\n\nvar _ParseUser = _interopRequireDefault(require(\"./ParseUser\"));\n\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nvar _ParseACL = _interopRequireDefault(require(\"./ParseACL\"));\n/* global window */\n\n/* global solanaWeb3 */\n\n\nvar base64 = {\n  decode: function decode(s) {\n    return Uint8Array.from(atob(s), function (c) {\n      return c.charCodeAt(0);\n    });\n  },\n  encode: function encode(b) {\n    return btoa(String.fromCharCode.apply(String, (0, _toConsumableArray2.default)(new Uint8Array(b))));\n  }\n};\n\nvar MoralisSol = /*#__PURE__*/function () {\n  function MoralisSol() {\n    (0, _classCallCheck2.default)(this, MoralisSol);\n  }\n\n  (0, _createClass2.default)(MoralisSol, null, [{\n    key: \"authenticate\",\n    value: function () {\n      var _authenticate = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(options) {\n        var _context, _user$get;\n\n        var phantom, solAddress, accounts, message, data, signature, authData, user;\n        return _regenerator.default.wrap(function (_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return MoralisSol.enable();\n\n              case 2:\n                phantom = _context2.sent;\n\n                if (phantom) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw new Error('Phantom wallet not available');\n\n              case 5:\n                solAddress = phantom.publicKey.toString();\n\n                if (solAddress) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                throw new Error('Address not found');\n\n              case 8:\n                accounts = [solAddress];\n                message = (options === null || options === void 0 ? void 0 : options.signingMessage) || MoralisSol.getSigningData();\n                _context2.next = 12;\n                return (0, _createSigningData.default)(message);\n\n              case 12:\n                data = _context2.sent;\n                _context2.next = 15;\n                return MoralisSol.sign(data);\n\n              case 15:\n                signature = _context2.sent;\n                authData = {\n                  id: solAddress,\n                  signature: signature,\n                  data: data\n                };\n                _context2.next = 19;\n                return _ParseUser.default.logInWith('moralisSol', {\n                  authData: authData\n                });\n\n              case 19:\n                user = _context2.sent;\n                _context2.next = 22;\n                return user.setACL(new _ParseACL.default(user));\n\n              case 22:\n                if (user) {\n                  _context2.next = 24;\n                  break;\n                }\n\n                throw new Error('Could not get user');\n\n              case 24:\n                user.set('solAccounts', uniq((0, _concat.default)(_context = []).call(_context, accounts, (_user$get = user.get('solAccounts')) !== null && _user$get !== void 0 ? _user$get : [])));\n                user.set('solAddress', solAddress);\n                _context2.next = 28;\n                return user.save();\n\n              case 28:\n                return _context2.abrupt(\"return\", user);\n\n              case 29:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function () {\n        return _authenticate.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"link\",\n    value: function () {\n      var _link = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(account, options) {\n        var _context3, _user$get2;\n\n        var message, user, solAddress, SolAddress, query, solAddressRecord, data, signature, authData;\n        return _regenerator.default.wrap(function (_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                message = (options === null || options === void 0 ? void 0 : options.signingMessage) || MoralisSol.getSigningData();\n                _context4.next = 3;\n                return _ParseUser.default.current();\n\n              case 3:\n                user = _context4.sent;\n                solAddress = account;\n                SolAddress = _ParseObject.default.extend('_SolAddress');\n                query = new _ParseQuery.default(SolAddress);\n                _context4.next = 9;\n                return query.get(solAddress).catch(function () {\n                  return null;\n                });\n\n              case 9:\n                solAddressRecord = _context4.sent;\n\n                if (solAddressRecord) {\n                  _context4.next = 20;\n                  break;\n                }\n\n                _context4.next = 13;\n                return (0, _createSigningData.default)(message);\n\n              case 13:\n                data = _context4.sent;\n                _context4.next = 16;\n                return MoralisSol.sign(solAddress, data);\n\n              case 16:\n                signature = _context4.sent;\n                authData = {\n                  id: solAddress,\n                  signature: signature,\n                  data: data\n                };\n                _context4.next = 20;\n                return user.linkWith('moralisSol', {\n                  authData: authData\n                });\n\n              case 20:\n                user.set('SolAccounts', uniq((0, _concat.default)(_context3 = [solAddress]).call(_context3, (_user$get2 = user.get('SolAccounts')) !== null && _user$get2 !== void 0 ? _user$get2 : [])));\n                user.set('solAddress', solAddress);\n                _context4.next = 24;\n                return user.save();\n\n              case 24:\n                return _context4.abrupt(\"return\", user);\n\n              case 25:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function () {\n        return _link.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"unlink\",\n    value: function () {\n      var _unlink = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(account) {\n        var _user$get3;\n\n        var accountsLower, SolAddress, query, solAddressRecord, user, accounts, nextAccounts;\n        return _regenerator.default.wrap(function (_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                accountsLower = account;\n                SolAddress = _ParseObject.default.extend('_SolAddress');\n                query = new _ParseQuery.default(SolAddress);\n                _context5.next = 5;\n                return query.get(accountsLower);\n\n              case 5:\n                solAddressRecord = _context5.sent;\n                _context5.next = 8;\n                return solAddressRecord.destroy();\n\n              case 8:\n                _context5.next = 10;\n                return _ParseUser.default.current();\n\n              case 10:\n                user = _context5.sent;\n                accounts = (_user$get3 = user.get('solAccounts')) !== null && _user$get3 !== void 0 ? _user$get3 : [];\n                nextAccounts = (0, _filter.default)(accounts).call(accounts, function (v) {\n                  return v !== accountsLower;\n                });\n                user.set('solAccounts', nextAccounts);\n                user.set('solAddress', nextAccounts[0]);\n                _context5.next = 17;\n                return user._unlinkFrom('moralisSol');\n\n              case 17:\n                _context5.next = 19;\n                return user.save();\n\n              case 19:\n                return _context5.abrupt(\"return\", user);\n\n              case 20:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function () {\n        return _unlink.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"sign\",\n    value: function () {\n      var _sign = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(message) {\n        var phantom, encodedMessage, signedMessage;\n        return _regenerator.default.wrap(function (_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return MoralisSol.enable();\n\n              case 2:\n                phantom = _context6.sent;\n                encodedMessage = new TextEncoder().encode(message);\n                _context6.next = 6;\n                return phantom.signMessage(encodedMessage, 'utf8');\n\n              case 6:\n                signedMessage = _context6.sent;\n                return _context6.abrupt(\"return\", base64.encode(signedMessage.signature));\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function () {\n        return _sign.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getSigningData\",\n    value: function value() {\n      return 'Moralis Authentication';\n    }\n  }]);\n  return MoralisSol;\n}();\n\n(0, _defineProperty2.default)(MoralisSol, \"enable\", /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5() {\n  var provider;\n  return _regenerator.default.wrap(function (_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          if (!(window && 'solana' in window)) {\n            _context8.next = 17;\n            break;\n          }\n\n          provider = window.solana;\n\n          if (!provider.isPhantom) {\n            _context8.next = 17;\n            break;\n          }\n\n          _context8.prev = 3;\n          _context8.next = 6;\n          return provider.connect({\n            onlyIfTrusted: true\n          });\n\n        case 6:\n          _context8.next = 16;\n          break;\n\n        case 8:\n          _context8.prev = 8;\n          _context8.t0 = _context8[\"catch\"](3);\n\n          if (!(_context8.t0.message === 'User rejected the request.')) {\n            _context8.next = 15;\n            break;\n          }\n\n          _context8.next = 13;\n          return provider.connect();\n\n        case 13:\n          _context8.next = 16;\n          break;\n\n        case 15:\n          throw _context8.t0;\n\n        case 16:\n          return _context8.abrupt(\"return\", provider);\n\n        case 17:\n          throw new Error('Phantom wallet not available');\n\n        case 18:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _callee5, null, [[3, 8]]);\n})));\n\nfunction toHexString(buffer\n/*: Buffer*/\n) {\n  return (0, _reduce.default)(buffer).call(buffer, function (str, byte) {\n    var _context7;\n\n    return str + (0, _padStart.default)(_context7 = byte.toString(16)).call(_context7, 2, '0');\n  }, '');\n}\n\nfunction uniq(arr) {\n  return (0, _filter.default)(arr).call(arr, function (v, i) {\n    return (0, _indexOf.default)(arr).call(arr, v) === i;\n  });\n}\n\nvar _default = MoralisSol;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}