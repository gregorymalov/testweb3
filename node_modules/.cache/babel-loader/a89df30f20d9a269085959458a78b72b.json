{"ast":null,"code":"'use strict';\n\nvar call = require('../internals/function-call');\n\nvar aCallable = require('../internals/a-callable');\n\nvar anObject = require('../internals/an-object'); // `Map.prototype.emplace` method\n// https://github.com/thumbsupep/proposal-upsert\n\n\nmodule.exports = function emplace(key, handler) {\n  var map = anObject(this);\n  var get = aCallable(map.get);\n  var has = aCallable(map.has);\n  var set = aCallable(map.set);\n  var value, inserted;\n\n  if (call(has, map, key)) {\n    value = call(get, map, key);\n\n    if ('update' in handler) {\n      value = handler.update(value, key, map);\n      call(set, map, key, value);\n    }\n\n    return value;\n  }\n\n  inserted = handler.insert(key, map);\n  call(set, map, key, inserted);\n  return inserted;\n};","map":null,"metadata":{},"sourceType":"script"}